package graph

import "github.com/pocketbase/pocketbase"
import "fmt"

templ Main(app *pocketbase.PocketBase, project_id string) {
	<div id="workspace" class="workspace" data-ref="workspace" >
		<div
			id="canvas-container"
			class="canvas-container"
		>
		</div>
		<div id="control-panel" class="control-panel">
			@header()
			@ControlPanelSection("Sorting", "graph_7", -1) {
				<div class="control-panel__button-group">
					<graph-btn action="sort_force" icon="graph_3" title="Fruchterman-Reingold esque sorting"></graph-btn>
					<graph-btn disabled action="sort_force" icon="graph_1" title="Hierarchy based sorting"></graph-btn>
				</div>
			}
			@ControlPanelSection("Position", "align_justify_stretch", 0) {
				<div class="control-panel__button-group" >
					<graph-btn action="distribute_vertical" icon="align_space_even"></graph-btn>
					<graph-btn action="distribute_horizontal" icon="align_justify_space_even"></graph-btn>
					<graph-btn action="align_vertical" icon="align_horizontal_center"></graph-btn>
					<graph-btn action="align_horizontal" icon="align_vertical_center"></graph-btn>
					</div>
			}
			@ControlPanelSection("Connection settings", "mediation", 1) {
				<div
					id="edge-type-select"
					class="edge-type-select"
					data-on-load={
						fmt.Sprintf("@get('/sse/project/%s/edge-select')", project_id)
					}
				></div>
			}
			@ControlPanelSection("Node settings", "control_point_duplicate", 2) {
				<div
					id="node-type-select"
					class="node-type-select"
					data-on-load={
						fmt.Sprintf("@get('/sse/project/%s/node-select')", project_id)
					}
				></div>
			}

			@Footer()
		</div>
		<dialog
			id="create-edge-dialog"
		>
			<p>Choose connection type</p>
			<form id="create-edge-form" method="dialog" koppla-submit="createEdge">
				<label> Type: 
					<select name="type" koppla-value="edge_type_signal" id="edge-type-select">
					</select>
				</label>
				<div class="btn-container">
					<button id="close">Create</button>
				</div>
			</form>
		</dialog>
		<script type="module">
			import {PBStore, CSVWriter, driver} from "/dist/graph.js";
			const store = new PBStore({{project_id}})
			const csv_data = new CSVWriter(`from_account,to_account,sum
1001,2001,50.25
1002,2002,120.00
1003,2003,30.50
1004,2004,200.75
1005,2005,80.10
1006,2006,15.99
1007,2007,75.00
1008,2008,180.30
1009,2009,45.60
1010,2010,99.99
1011,2011,10.00
1012,2012,250.00
1013,2013,60.00
1014,2014,130.50
1015,2015,25.75
1016,2016,190.00
1017,2017,70.20
1018,2018,110.40
1019,2019,55.00
1020,2020,85.80
1021,2021,150.00
1022,2022,35.50
1023,2023,220.00
1024,2024,40.10
1025,2025,100.00
1026,2026,65.25
1027,2027,170.00
1028,2028,20.99
1029,2029,90.50
1030,2030,140.75
1031,2031,50.00
1032,2032,125.00
1033,2033,33.33
1034,2034,210.00
1035,2035,78.90
1036,2036,18.00
1037,2037,70.00
1038,2038,160.00
1039,2039,42.50
1040,2040,88.88
1041,2041,12.50
1042,2042,230.00
1043,2043,58.00
1044,2044,145.00
1045,2045,28.00
1046,2046,200.00
1047,2047,72.10
1048,2048,115.00
1049,2049,52.00
1050,2050,92.00
1051,2051,155.00
1052,2052,38.00
1053,2053,225.00
1054,2054,43.00
1055,2055,105.00
1056,2056,68.00
1057,2057,175.00
1058,2058,23.00
1059,2059,95.00
1060,2060,145.00
1061,2061,55.00
1062,2062,130.00
1063,2063,36.00
1064,2064,215.00
1065,2065,80.00
1066,2066,19.00
1067,2067,73.00
1068,2068,165.00
1069,2069,45.00
1070,2070,90.00
1071,2071,13.00
1072,2072,235.00
1073,2073,62.00
1074,2074,150.00
1075,2075,30.00
1076,2076,205.00
1077,2077,75.00
1078,2078,120.00
1079,2079,58.00
1080,2080,98.00
1081,2081,160.00
1082,2082,40.00
1083,2083,230.00
1084,2084,45.00
1085,2085,110.00
1086,2086,70.00
1087,2087,180.00
1088,2088,25.00
1089,2089,100.00
1090,2090,150.00
1091,2091,60.00
1092,2092,135.00
1093,2093,38.00
1094,2094,220.00
1095,2095,82.00
1096,2096,20.00
1097,2097,76.00
1098,2098,170.00
1099,2099,48.00
1100,2100,92.00
1101,2001,60.50
1002,2003,130.00
1003,2005,35.00
1004,2007,210.25
1005,2009,85.10
1006,2011,18.99
1007,2013,80.00
1008,2015,190.30
1009,2017,50.60
1010,2019,105.99
1011,2021,15.00
1012,2023,260.00
1013,2025,65.00
1014,2027,135.50
1015,2029,30.75
1016,2031,195.00
1017,2033,75.20
1018,2035,115.40
1019,2037,60.00
1020,2039,90.80
1021,2041,155.00
1022,2043,40.50
1023,2045,225.00
1024,2047,45.10
1025,2049,105.00
1026,2051,70.25
1027,2053,175.00
1028,2055,25.99
1029,2057,95.50
1030,2059,145.75
1031,2061,55.00
1032,2063,130.00
1033,2065,38.33
1034,2067,215.00
1035,2069,82.90
1036,2071,20.00
1037,2073,75.00
1038,2075,165.00
1039,2077,45.50
1040,2079,92.88
1041,2081,15.50
1042,2083,235.00
1043,2085,60.00
1044,2087,150.00
1045,2089,30.00
1046,2091,205.00
1047,2093,78.10
1048,2095,120.00
1049,2097,55.00
1050,2099,95.00
1051,2002,160.00
1052,2004,42.00
1053,2006,230.00
1054,2008,48.00
1055,2010,110.00
1056,2012,72.00
1057,2014,180.00
1058,2016,28.00
1059,2018,105.00
1060,2020,155.00
1061,2022,62.00
1062,2024,140.00
1063,2026,40.00
1064,2028,220.00
1065,2030,85.00
1066,2032,22.00
1067,2034,78.00
1068,2036,170.00
1069,2038,50.00
1070,2040,95.00
1071,2042,18.00
1072,2044,240.00
1073,2046,65.00
1074,2048,155.00
1075,2050,32.00
1076,2052,210.00
1077,2054,80.00
1078,2056,125.00
1079,2058,60.00
1080,2060,100.00
1081,2062,165.00
1082,2064,45.00
1083,2066,235.00
1084,2068,50.00
1085,2070,115.00
1086,2072,75.00
1087,2074,185.00
1088,2076,30.00
1089,2078,110.00
1090,2080,160.00
1091,2082,65.00
1092,2084,145.00
1093,2086,42.00
1094,2088,225.00
1095,2090,88.00
1096,2092,25.00
1097,2094,80.00
1098,2096,175.00
1099,2098,52.00
1100,2100,98.00
1001,2001,52.25
1002,2002,122.00
1003,2003,32.50
1004,2004,202.75
1005,2005,82.10
1006,2006,17.99
1007,2007,77.00
1008,2008,182.30
1009,2009,47.60
1010,2010,101.99
1011,2011,12.00
1012,2012,252.00
1013,2013,62.00
1014,2014,132.50
1015,2015,27.75
1016,2016,192.00
1017,2017,72.20
1018,2018,112.40
1019,2019,57.00
1020,2020,87.80
1021,2021,152.00
1022,2022,37.50
1023,2023,222.00
1024,2024,42.10
1025,2025,102.00
1026,2026,67.25
1027,2027,172.00
1028,2028,22.99
1029,2029,92.50
1030,2030,142.75
1031,2031,52.00
1032,2032,127.00
1033,2033,35.33
1034,2034,212.00
1035,2035,80.90
1036,2036,20.00
1037,2037,72.00
1038,2038,162.00
1039,2039,44.50
1040,2040,90.88
1041,2041,14.50
1042,2042,232.00
1043,2043,60.00
1044,2044,147.00
1045,2045,30.00
1046,2046,202.00
1047,2047,74.10
1048,2048,117.00
1049,2049,54.00
1050,2050,94.00
1051,2051,157.00
1052,2052,40.00
1053,2053,227.00
1054,2054,45.00
1055,2055,107.00
1056,2056,70.00
1057,2057,177.00
1058,2058,25.00
1059,2059,97.00
1060,2060,147.00
1061,2061,57.00
1062,2062,132.00
1063,2063,38.00
1064,2064,217.00
1065,2065,82.00
1066,2066,21.00
1067,2067,75.00
1068,2068,167.00
1069,2069,47.00
1070,2070,92.00
1071,2071,15.00
1072,2072,237.00
1073,2073,64.00
1074,2074,152.00
1075,2075,32.00
1076,2076,207.00
1077,2077,77.00
1078,2078,122.00
1079,2079,60.00
1080,2080,100.00
1081,2081,162.00
1082,2082,42.00
1083,2083,232.00
1084,2084,47.00
1085,2085,112.00
1086,2086,72.00
1087,2087,182.00
1088,2088,27.00
1089,2089,102.00
1090,2090,152.00
1091,2091,62.00
1092,2092,137.00
1093,2093,40.00
1094,2094,222.00
1095,2095,84.00
1096,2096,22.00
1097,2097,78.00
1098,2098,172.00
1099,2099,50.00
1100,2100,100.00
`, ["from_account", "to_account"])
			document.addEventListener("DOMContentLoaded", () => {
				driver.run(store).then(graph => {
					window.driver = driver
					// driver.graph.import(
					// 	csv_data,
					// 	[
					// 		{
					// 			source_column: "from_account",
					// 			target_column: "to_account",
					// 			edge_type: "6cvz5q2hdqo26bx"
					// 		}
					// 	]
					// );
				})
			})
		</script>
	</div>
}

templ Footer() {
	<div class="control-panel__section control-panel__section--footer">
		<dialog data-ref="tooltips">
			<div class="tooltips">
				<div><span>ctrl</span> + <span>drag</span>: pan</div>
				<div><span>shift</span> + <span>drag</span>: connect</div>
				<div><span>del</span>: delete selected</div>
				<div><span>backspace</span>: delete selected connections</div>
				<div><span>scroll</span>: zoom</div>
			</div>
		</dialog>
		<div class="control-panel__button-group">
			<button data-on-click='$tooltips.showModal()'>
				<span class="material-symbols">question_mark</span>
			</button>
		</div>
	</div>
}

templ header() {
	<div class="control-panel__section control-panel__section--header">
		<div id="user-card" data-on-load="@get('/auth/user')"></div>
	</div>
}

templ ControlPanelSection(title string, icon string, tool int) {
	<div class="control-panel__section" tool={tool}>
		<div class="control-panel__section-name">
			<span class="material-symbols">{icon}</span>
			{title}
		</div>
		{ children... }
	</div>
}

templ NodeSelector(node_types []NodeType) {
	<div id="node-type-select" class="type-select">
		<label> Type: 
			<graph-select name="node_type">
				for _, t := range node_types {
					<option value={t.Id}>{t.Name}</option>
				}
			</graph-select>
		</label>
	</div>
}

templ EdgeSelector(edge_types []EdgeType) {
	<div id="edge-type-select" class="type-select">
		<label> Type: 
			<graph-select name="edge_type">
				for _, t := range edge_types {
					<option value={t.Id}>{t.Name}</option>
				}
			</graph-select>
		</label>
	</div>
}
