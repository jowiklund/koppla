package graph

import "github.com/pocketbase/pocketbase"
import "fmt"

templ Main(app *pocketbase.PocketBase, project_id string) {
	<div id="workspace" class="workspace" data-ref="workspace"
		data-signals="{
			loaded: false,
			project: {
				name: '',
				id: '',
				permissions: 0
			},
			nodeTypes: [],
			edgeTypes: [],
			nodes: [],
			edges: []
		}"
		data-on-load={fmt.Sprintf("@get('/sse/project/%s')", project_id)}
		>
		<div id="canvas-container" class="canvas-container"></div>
		<div id="control-panel" class="control-panel">
			@header()
			@ControlPanelSection("Sorting") {
				<div class="control-panel__button-group">
					<button title="Fruchterman-Reingold esque sorting">
						<span class="material-symbols-outlined">graph_3</span>
					</button>
					<button title="Hierarchy based sorting" disabled>
						<span class="material-symbols-outlined">graph_1</span>
					</button>
				</div>
			}
			@ControlPanelSection("Position") {
				<div class="control-panel__button-group">
					<button koppla-click="alignVert">
						<span class="material-symbols-outlined">align_justify_space_even</span>
					</button>
					<button koppla-click="alignHoriz">
						<span class="material-symbols-outlined">align_space_even</span>
					</button>
					<button koppla-click="evenHoriz">
						<span class="material-symbols-outlined">horizontal_distribute</span>
					</button>
					<button data-on-click="$driver.graph.evenVert($driver.selected_node_handles)">
						<span class="material-symbols-outlined">vertical_distribute</span>
					</button>
				</div>
			}
			@ControlPanelSection("Select") {
				@NodeTypeSelect(app)
			}
			@Footer()
		</div>
		<dialog
			id="create-edge-dialog"
		>
			<p>Choose connection type</p>
			<form id="create-edge-form" method="dialog" koppla-submit="createEdge">
				<label> Type: 
					<select name="type" koppla-value="edge_type_signal" id="edge-type-select">
					</select>
				</label>
				<div class="btn-container">
					<button id="close">Create</button>
				</div>
			</form>
		</dialog>
		<script type="module">
			import {PBStore, driver, throttle} from "/dist/graph.js";
			const store = new PBStore({{project_id}})
			driver.run(store).then(graph => {
				const save = throttle(graph.doNodeUpdate, 2000).bind(graph)
				graph.on("world:update", save)
			})
		</script>
	</div>
}

templ Footer() {
	<div class="control-panel__section control-panel__section--footer">
		<dialog data-ref="tooltips">
			<div class="tooltips">
				<div><span>ctrl</span> + <span>drag</span>: pan</div>
				<div><span>shift</span> + <span>drag</span>: connect</div>
				<div><span>del</span>: delete selected</div>
				<div><span>backspace</span>: delete selected connections</div>
				<div><span>scroll</span>: zoom</div>
			</div>
		</dialog>
		<div class="control-panel__button-group">
			<button data-on-click='$tooltips.showModal()' koppla-click="openToolTips">
				<span class="material-symbols-outlined">question_mark</span>
			</button>
		</div>
	</div>
}

templ header() {
	<div class="control-panel__section control-panel__section--header">
		<div id="user-card" data-on-load="@get('/auth/user')"></div>
	</div>
}

templ ControlPanelSection(title string) {
	<div class="control-panel__section">
		<p>{title}</p>
		{ children... }
	</div>
}

templ NodeTypeSelect(app *pocketbase.PocketBase) {
	{{nodetypes := *GetNodeTypes(app)}}
	<select>
	for _, n := range nodetypes {
		<option value={n.Id}>{n.Name}</option>
	}
	</select>
}
