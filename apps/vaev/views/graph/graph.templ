package graph

import "github.com/pocketbase/pocketbase"
import "fmt"

templ Main(app *pocketbase.PocketBase, project_id string) {
	<div
		id="node-type-select"
		class="node-type-select"
		data-on-load={
			fmt.Sprintf("@get('/sse/project/%s/node-select')", project_id)
		}
	></div>
	<div id="workspace" class="workspace" data-ref="workspace"
		data-signals="{
			loaded: false,
			project: {
				name: '',
				id: '',
				permissions: 0
			},
			nodeTypes: [],
			edgeTypes: [],
			nodes: [],
			edges: [],
			selectedTool: 0,
			prevTool: 0,
			showNodeTypeSelect: false,
			currentPos: {
				x: 0,
				y: 0
			}
		}"
		data-on-signal-change-selected-tool="window.driver.current_tool = $selectedTool;"
		data-on-keydown__window="
			$prevTool = $selectedTool;
			evt.key == 'Shift' ? $selectedTool = 1 : null;
			evt.key == 'Control' ? $selectedTool = 3 : null;
			evt.key == '1' ? $selectedTool = 0 : null;
			evt.key == '2' ? $selectedTool = 1 : null;
			evt.key == '3' ? $selectedTool = 2 : null;
			evt.key == '4' ? $selectedTool = 3 : null;
		"
		data-on-keyup__window="
			evt.key == 'Shift' ? $selectedTool = $prevTool : null;
			evt.key == 'Control' ? $selectedTool = $prevTool : null;
		"
		>
		@toolbar()
		<div
			id="canvas-container"
			class="canvas-container"
			data-on-kpla-click="
				$selectedTool == 2 ? $showNodeTypeSelect = true : null;
				$currentPos = evt.detail.pos.mouse;
			"
		>
		</div>
		<div id="control-panel" class="control-panel">
			@header()
			@ControlPanelSection("Sorting") {
				<div class="control-panel__button-group">
					<button data-on-click="window.driver.graph.sortNodes()" title="Fruchterman-Reingold esque sorting">
						<span class="material-symbols">graph_3</span>
					</button>
					<button title="Hierarchy based sorting" disabled>
						<span class="material-symbols">graph_1</span>
					</button>
				</div>
			}
			@ControlPanelSection("Position") {
				<div class="control-panel__button-group">
					<button koppla-click="alignVert">
						<span class="material-symbols">align_justify_space_even</span>
					</button>
					<button koppla-click="alignHoriz">
						<span class="material-symbols">align_space_even</span>
					</button>
					<button koppla-click="evenHoriz">
						<span class="material-symbols">horizontal_distribute</span>
					</button>
					<button data-on-click="$driver.graph.evenVert($driver.selected_node_handles)">
						<span class="material-symbols">vertical_distribute</span>
					</button>
				</div>
			}
			@Footer()
		</div>
		<dialog
			id="create-edge-dialog"
		>
			<p>Choose connection type</p>
			<form id="create-edge-form" method="dialog" koppla-submit="createEdge">
				<label> Type: 
					<select name="type" koppla-value="edge_type_signal" id="edge-type-select">
					</select>
				</label>
				<div class="btn-container">
					<button id="close">Create</button>
				</div>
			</form>
		</dialog>
		<script type="module">
			import {PBStore, driver, throttle} from "/dist/graph.js";
			const store = new PBStore({{project_id}})
			driver.run(store).then(graph => {
				const save = throttle(graph.persistGraphState, 5000).bind(graph)
				graph.on("node:update", save)
				window.driver = driver
			})
		</script>
	</div>
}

templ Footer() {
	<div class="control-panel__section control-panel__section--footer">
		<dialog data-ref="tooltips">
			<div class="tooltips">
				<div><span>ctrl</span> + <span>drag</span>: pan</div>
				<div><span>shift</span> + <span>drag</span>: connect</div>
				<div><span>del</span>: delete selected</div>
				<div><span>backspace</span>: delete selected connections</div>
				<div><span>scroll</span>: zoom</div>
			</div>
		</dialog>
		<div class="control-panel__button-group">
			<button data-on-click='$tooltips.showModal()'>
				<span class="material-symbols">question_mark</span>
			</button>
		</div>
	</div>
}

templ header() {
	<div class="control-panel__section control-panel__section--header">
		<div id="user-card" data-on-load="@get('/auth/user')"></div>
	</div>
}

templ ControlPanelSection(title string) {
	<div class="control-panel__section">
		<p>{title}</p>
		{ children... }
	</div>
}

templ toolbar() {
	<div class="toolbar">
		<label data-class-active="$selectedTool == 0" title="(1) : Cursor">
			<input checked="checked" type="radio" data-bind-selected-tool value="0" />
			<span class="material-symbols fill">arrow_selector_tool</span>
		</label>
		<label data-class-active="$selectedTool == 1" title="(2 / shift) : Connect nodes">
			<input type="radio" data-bind-selected-tool value="1" />
			<span class="material-symbols fill">mediation</span>
		</label>
		<label data-class-active="$selectedTool == 2" title="(3) : Create nodes">
			<input type="radio" data-bind-selected-tool value="2" />
			<span class="material-symbols fill">control_point_duplicate</span>
		</label>
		<label data-class-active="$selectedTool == 3" title="(4 / ctrl) : Pan">
			<input type="radio" data-bind-selected-tool value="3" />
			<span class="material-symbols fill">drag_pan</span>
		</label>
	</div>
}

templ NodeSelector(node_types []NodeType) {
	<div id="node-type-select" class="node-type-select" data-show="$showNodeTypeSelect">
		<label> Name:
		<input type="text" data-bind-node-name />
		</label>
		<label> Type: 
			<select
				data-signals-selected-node-type={fmt.Sprintf("'%s'", node_types[0].Id)}
				data-bind-selected-node-type
				data-on-click="console.log($selectedNodeType)"
			>
				for _, t := range node_types {
					<option value={t.Id}>{t.Name}</option>
				}
			</select>
		</label>
		<div class="btn-container" data-on-click="
			console.log(parseInt($currentPos.x));
			window.driver.graph.createNode({
				type: $selectedNodeType,
				name: $nodeName,
				metadata: '',
				...$currentPos,
			});
			$showNodeTypeSelect = false;
		">
			<button class="btn" id="close">Create</button>
		</div>
	</div>
}
