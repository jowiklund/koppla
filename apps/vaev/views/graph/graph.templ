package graph

import "github.com/pocketbase/pocketbase"
import "fmt"

templ Main(app *pocketbase.PocketBase, project_id string) {
	<div id="workspace" class="workspace" data-ref="workspace"
		data-signals="{
			loaded: false,
			project: {
				name: '',
				id: '',
				permissions: 0
			},
			nodeTypes: [],
			edgeTypes: [],
			nodes: [],
			edges: [],
			selectedTool: 0,
			prevTool: 0,
			currentPos: {
				x: 0,
				y: 0
			}
		}"
		>
		<div
			id="canvas-container"
			class="canvas-container"
		>
		</div>
		<div id="control-panel" class="control-panel">
			@header()
			@ControlPanelSection("Sorting", "graph_7", -1) {
				<div class="control-panel__button-group">
					<graph-btn action="sort_force" icon="graph_3" title="Fruchterman-Reingold esque sorting"></graph-btn>
					<graph-btn disabled action="sort_force" icon="graph_1" title="Hierarchy based sorting"></graph-btn>
				</div>
			}
			@ControlPanelSection("Position", "align_justify_stretch", 0) {
				<div class="control-panel__button-group" >
					<graph-btn action="distribute_vertical" icon="align_space_even"></graph-btn>
					<graph-btn action="distribute_horizontal" icon="align_justify_space_even"></graph-btn>
					<graph-btn action="align_vertical" icon="align_horizontal_center"></graph-btn>
					<graph-btn action="align_horizontal" icon="align_vertical_center"></graph-btn>
					</div>
			}
			@ControlPanelSection("Connection settings", "mediation", 1) {
				<div
					id="edge-type-select"
					class="edge-type-select"
					data-on-load={
						fmt.Sprintf("@get('/sse/project/%s/edge-select')", project_id)
					}
				></div>
			}
			@ControlPanelSection("Node settings", "control_point_duplicate", 2) {
				<div
					id="node-type-select"
					class="node-type-select"
					data-on-load={
						fmt.Sprintf("@get('/sse/project/%s/node-select')", project_id)
					}
				></div>
			}

			@Footer()
		</div>
		<dialog
			id="create-edge-dialog"
		>
			<p>Choose connection type</p>
			<form id="create-edge-form" method="dialog" koppla-submit="createEdge">
				<label> Type: 
					<select name="type" koppla-value="edge_type_signal" id="edge-type-select">
					</select>
				</label>
				<div class="btn-container">
					<button id="close">Create</button>
				</div>
			</form>
		</dialog>
		<script type="module">
			import {PBStore, driver} from "/dist/graph.js";
			const store = new PBStore({{project_id}})
			document.addEventListener("DOMContentLoaded", () => {
				driver.run(store).then(graph => {
					window.driver = driver
				})
			})
		</script>
	</div>
}

templ Footer() {
	<div class="control-panel__section control-panel__section--footer">
		<dialog data-ref="tooltips">
			<div class="tooltips">
				<div><span>ctrl</span> + <span>drag</span>: pan</div>
				<div><span>shift</span> + <span>drag</span>: connect</div>
				<div><span>del</span>: delete selected</div>
				<div><span>backspace</span>: delete selected connections</div>
				<div><span>scroll</span>: zoom</div>
			</div>
		</dialog>
		<div class="control-panel__button-group">
			<button data-on-click='$tooltips.showModal()'>
				<span class="material-symbols">question_mark</span>
			</button>
		</div>
	</div>
}

templ header() {
	<div class="control-panel__section control-panel__section--header">
		<div id="user-card" data-on-load="@get('/auth/user')"></div>
	</div>
}

templ ControlPanelSection(title string, icon string, tool int) {
	<div class="control-panel__section" tool={tool}>
		<div class="control-panel__section-name">
			<span class="material-symbols">{icon}</span>
			{title}
		</div>
		{ children... }
	</div>
}

templ toolbar() {
	<div class="toolbar">
		<label data-class-active="$selectedtool == 0" title="(1) : cursor">
			<input checked="checked" type="radio" data-bind-selected-tool value="0" />
			<span class="material-symbols fill">arrow_selector_tool</span>
		</label>
		<label data-class-active="$selectedtool == 1" title="(2 / shift) : connect nodes">
			<input type="radio" data-bind-selected-tool value="1" />
			<span class="material-symbols fill">mediation</span>
		</label>
		<label data-class-active="$selectedtool == 2" title="(3) : create nodes">
			<input type="radio" data-bind-selected-tool value="2" />
			<span class="material-symbols fill">control_point_duplicate</span>
		</label>
		<label data-class-active="$selectedtool == 3" title="(4 / ctrl) : pan">
			<input type="radio" data-bind-selected-tool value="3" />
			<span class="material-symbols fill">drag_pan</span>
		</label>
	</div>
}

templ NodeSelector(node_types []NodeType) {
	<div id="node-type-select" class="type-select">
		<label> Type: 
			<graph-select name="node_type">
				for _, t := range node_types {
					<option value={t.Id}>{t.Name}</option>
				}
			</graph-select>
		</label>
	</div>
}

templ EdgeSelector(edge_types []EdgeType) {
	<div id="edge-type-select" class="type-select">
		<label> Type: 
			<graph-select name="edge_type">
				for _, t := range edge_types {
					<option value={t.Id}>{t.Name}</option>
				}
			</graph-select>
		</label>
	</div>
}
